      
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
    "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>

    </head>
 
    <body>
       <center><h2>Agenda Sheet</h2></center>   <%= link_to 'Back', visits_path, :class=> 'btn' %>  <br/>


<br/>
       <center>  <div id="grid_here" style="width:1150px; height:600px;">

        </div></center>
        <script type="text/javascript" charset="utf-8">

      var deco = getUrlVars()["visit"];

 

      var grid = new dhtmlXGridObject("grid_here");
            
              
            grid.setImagePath("");
            grid.setHeader("Date,Start Time,#cspan,End Time,#cspan,Duration,Agenda,Details,Firm Participants,TCS Participants");
            grid.attachHeader(["#rspan", "HH", "MM", "HH", "MM", "#rspan","#rspan","#rspan","#rspan","#rspan"]);
            grid.enableMultiselect(true)
            grid.enableLightMouseNavigation(true);
            grid.setInitWidths("100,50,50,50,50,100,150,200,200,200");
            grid.setSkin("dhx_skyblue");
            grid.enableAutoHeight(true);
            grid.enableMultiline(true);
            grid.enableEditEvents(true,false,false);
            grid.setColTypes("dhxCalendar,coro,coro,coro,coro,ro,txt,txt,txt,txt");

            var combo1 = grid.getCombo(1); 
            var combo2 = grid.getCombo(2); 
            var combo3 = grid.getCombo(3); 
            var combo4 = grid.getCombo(4); 

             combo1.put(0,"0"); 
            combo1.put(7,"7"); 
            combo1.put(8,"8"); 
            combo1.put(9,"9"); 
            combo1.put(10,"10"); 
            combo1.put(11,"11"); 
            combo1.put(12,"12"); 
            combo1.put(13,"13"); 
            combo1.put(14,"14"); 
            combo1.put(15,"15"); 
            combo1.put(16,"16"); 
            combo1.put(17,"17"); 
            combo1.put(18,"18"); 
            combo1.put(19,"19");
            combo1.put(20,"20");
            combo1.put(21,"21");
    
            combo2.put(0,"0"); 
            combo2.put(15,"15"); 
            combo2.put(30,"30"); 
            combo2.put(45,"45"); 
            
     
            combo3.put(0,"0"); 
            combo3.put(7,"7"); 
            combo3.put(8,"8"); 
            combo3.put(9,"9"); 
            combo3.put(10,"10"); 
            combo3.put(11,"11"); 
            combo3.put(12,"12"); 
            combo3.put(13,"13"); 
            combo3.put(14,"14"); 
            combo3.put(15,"15"); 
            combo3.put(16,"16"); 
            combo3.put(17,"17"); 
            combo3.put(18,"18");  
            combo3.put(19,"19");  
            combo3.put(20,"20");
            combo3.put(21,"21");  

            combo4.put(0,"0"); 
            combo4.put(15,"15"); 
            combo4.put(30,"30"); 
            combo4.put(45,"45"); 

                    
            grid.init();
      
            grid.load("/visit/data?visit="+deco)

grid.attachEvent("onEditCell",function(stage,rId,cInd,nValue,oValue){
    if (stage==1 &&  this.editor &&  this.editor.obj){
        this.editor.obj.select();
    }
    return true;
    });
           
       dp = new dataProcessor("/visit/dbaction?visit="+deco);
            dp.init(grid);

      grid.attachEvent("onEditCell",function(stage,id,ind,value){
    if (stage == 2 && (ind ==1 || ind == 2 || ind ==3 || ind == 4) ){
          //this code will be executed when edit operation finished in column with index 1
               StartTimeHour= parseInt(grid.cellById(id,1).getValue());
               StartTimeMin= parseInt(grid.cellById(id,2).getValue());
               EndTimeHour= parseInt(grid.cellById(id,3).getValue());
               
               EndTimeMin= parseInt(grid.cellById(id,4).getValue());

 alert(EndTimeHour)
  alert(StartTimeHour)
               
             if ((EndTimeHour >= StartTimeHour) && (EndTimeMin>=StartTimeMin) )

                  timeduration=(EndTimeHour-StartTimeHour) +"hr(s)"+(EndTimeMin-StartTimeMin)+" mins"

            else if ((EndTimeHour >= StartTimeHour) && (EndTimeMin<StartTimeMin) && EndTimeMin!=0 )
                   timeduration=(EndTimeHour-StartTimeHour)+" hr(s)"+(StartTimeMin-EndTimeMin)+" mins"

            else if ( (EndTimeHour >= StartTimeHour) && (EndTimeMin==0 && StartTimeMin!=0))
                  timeduration=(EndTimeHour-StartTimeHour-1)+" hr(s)"+(60-StartTimeMin)+" mins"
     
   grid.cells(id,5).setValue(timeduration);
      
          
    }
    return true;
});
            
function getUrlVars() {
    var vars = {};
    var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(m,key,value) {
        vars[key] = value;
    });
    return vars;
}

        </script>
        <% @visit=Visit.find(params[:visit]) %>
     
       <center> 
       <%= submit_tag "Add", :type => 'button', :onclick => "grid.addRow(grid.uid(),['#{@visit.Date}','0','0','0','0','0','Click to add agenda','Click to add details','Click to add FIRM participants','Click to add TCS participants'])" ,:class => "btn" %>
        <input type="button" value="Delete" onclick="grid.deleteSelectedRows()" class="btn"> 




         <%= link_to 'Export as Excel', url_for(:format => 'xls' ,:filename=> 'your_file_name.xls', :visit => params[:visit]) , :class => "btn" %></center></center>


   

    </body>

</html>

